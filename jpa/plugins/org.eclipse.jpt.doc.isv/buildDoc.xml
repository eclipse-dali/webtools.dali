<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2012 Oracle. All rights reserved.
  This program and the accompanying materials are made available under the
  terms of the Eclipse Public License v1.0, which accompanies this distribution
  and is available at http://www.eclipse.org/legal/epl-v10.html.

  Contributors:
    Oracle - initial API and implementation
 -->

<project name="JPT Doc ISV Build" default="all"  basedir="." >

	<target name="init">
		<available file="${basedir}/index" property="index.present"/>
		<delete file="jptOptions.tmp.txt"/>
		<delete file="jptClasspath.tmp.properties"/>
	</target>

	<target name="all" depends="init" unless="index.present">
		<!-- <antcall target="convertSchemaToHtml" /> -->
		<antcall target="generateJavadoc" />
<!--		<antcall target="build.index" /> /-->
		<!--antcall target="createDocZip" /-->
	</target>

	<target name="build.index" description="Builds search index for the plug-in: org.eclipse.jpt.doc.isv." if="eclipse.running">
		<help.buildHelpIndex manifest="${basedir}/plugin.xml" destination="${basedir}"/>
	</target>

	<target name="getJavadocPath">
		<available file="${java.home}/../bin/javadoc.exe" property="javadoc" value="${java.home}/../bin/javadoc.exe"/>
		<available file="${java.home}/../bin/javadoc" property="javadoc" value="${java.home}/../bin/javadoc" />
	</target>

	<target name="generateJavadoc" depends="getJavadocPath" if="javadoc">
		<echo message="#### jpt.doc.isv #### - java.home = ${java.home}" />
		<echo message="${base.install.dir} NOT SET" />
		<echo message="${install.destination} NOT SET" />
		
		<property name="base.install.dir" value="../../../eclipse/plugins" />
		
		<property name="optionsFile" value="jptOptions.tmp.txt" />
		<copy file="jptOptions.txt" tofile="${optionsFile}" overwrite="true" />
		<copy file="jptClasspath.template" tofile="jptClasspath.tmp.properties" overwrite="true" />

		<condition property="pathSeparator" value=":">
			<os family="unix" />
		</condition>
		<condition property="pathSeparator" value=";">
			<os family="windows" />
		</condition>

        <antcall target="replaceRtTokens" />
		
        <antcall target="replaceWtpRtTokens" />
 
        <antcall target="replacePackageTokens">
            <param name="packageName" value="jpt.common.utility" />
        </antcall>
        <antcall target="replacePackageTokens">
            <param name="packageName" value="jpt.common.core" />
        </antcall>
        <antcall target="replacePackageTokens">
            <param name="packageName" value="jpt.common.ui" />
        </antcall>

        <antcall target="replaceJptRtTokens" />

		<replaceregexp file="${basedir}/${optionsFile}" flags="g" match=";" replace="${pathSeparator}" />

		<!--scrub isv plugin directories of any preexisting doc content-->
		<delete dir="index-files"/>
		<delete dir="org"/>
		<delete dir="resources"/>

		<exec dir="." executable="${javadoc}" output="doc.bin.log">
			<arg line="@${basedir}/${optionsFile} -J-Xmx1000M" />
		</exec>
	</target>

	<!-- replaceRtTokens -->
	<target name="replaceRtTokens" if="optionsFile" >
		<fileset id="jreJars" dir="${java.home}/lib">
		    <include name="*.jar" />
		</fileset>
		<pathconvert pathsep="${pathSeparator}" property="jreClasspath" refid="jreJars"/>
		<replace file="${basedir}/${optionsFile}" token="@rt@" value="${jreClasspath}" />
	</target>

	<!-- replaceWtpRtTokens -->
	<target name="replaceWtpRtTokens" if="optionsFile" >
		<fileset id="wtpJars" dir="${base.install.dir}">
		    <include name="*.jar" />
		</fileset>
		<pathconvert pathsep="${pathSeparator}" property="wtpClasspath" refid="wtpJars"/>
		<replace file="${basedir}/${optionsFile}" token="@wtprt@" value="${wtpClasspath}" />
	</target>

	<!-- replaceJptRtTokens -->
	<target name="replaceJptRtTokens" if="optionsFile" >
		<property file="jptClasspath.tmp.properties" />
		<replace file="${basedir}/${optionsFile}" token="@jptrt@" value="${jptClasspath}" />
	</target>

	<!-- replacePackageTokens -->
	<target name="replacePackageTokens" if="optionsFile">
		<echo message="${packageName}" />
		<replace 
			file="${basedir}/${optionsFile}" 
			propertyfile="${basedir}/${packageName}.properties">

            <replacefilter
                token="@${packageName}.sourcepath@"
                property="${packageName}.sourcepath"/>
            <replacefilter
                token="@${packageName}.packages@"
                property="${packageName}.packages"/>
		</replace>
	</target>

	<target name="buildJptDoc" unless="jpt.index.present">
		<ant antfile="buildDoc.xml" dir="../org.eclipse.jpt.doc.isv" />
	</target>

	<target name="createDocZip">
		<zip zipfile="${basedir}/doc.zip"
		basedir="${basedir}"
		includes="schema.css, book.css, notices.html, about.html, concepts/**, guide/**, tips/**, reference/**, tasks/**, whatsNew/**, images/**"
	/>
	</target>

</project>
